{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","handleSort","setState","handleReverse","prevState","handleReset","this","reorderedGoods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","cn","onClick","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,iGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAe,CACbC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,WAAa,SAACH,GACZ,EAAKI,SAAS,CAAEJ,cAPpB,EAUEK,cAAgB,WACd,EAAKD,UAAS,SAACE,GAAD,MAAgB,CAAEJ,YAAaI,EAAUJ,gBAX3D,EAcEK,YAAc,WACZ,EAAKH,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KAjBlB,4CAqBE,WAAU,IAAD,OACP,EAAiCM,KAAKT,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZO,EApDH,YAEJ,IADCT,EACF,EADEA,SAAUE,EACZ,EADYA,WAENQ,EAAY,UAAOb,GAkBzB,OAhBAa,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAIb,IAAaJ,EAASkB,SACjBF,EAAEG,cAAcF,GAGrBb,IAAaJ,EAASoB,OACjBJ,EAAEK,OAASJ,EAAEI,OAGf,KAGLf,GACFQ,EAAaQ,UAGRR,EA+BkBS,CAAkB,CAAEnB,WAAUE,eAErD,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CACZ,kBAAkB,EAClB,WAAYtB,IAAaJ,EAASkB,WAEpCS,QAAS,kBAAM,EAAKpB,WAAWP,EAASkB,WAN1C,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IAAG,CACZ,qBAAqB,EACrB,WAAYtB,IAAaJ,EAASoB,SAEpCO,QAAS,kBAAM,EAAKpB,WAAWP,EAASoB,SAN1C,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IAAG,CACZ,qBAAqB,EACrB,YAA2B,IAAfpB,IAEdqB,QAAS,kBAAM,EAAKlB,iBANtB,sBAWEG,KAAKT,MAAMC,WAAaJ,EAASK,MAAQO,KAAKT,MAAMG,aAElD,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKhB,eAHtB,sBAUN,6BACGE,EAAee,KAAI,SAAAC,GAClB,OACE,oBAAI,UAAQ,OAAZ,SAAoBA,gBA5ElC,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f8a7e128.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goodsFromServer];\n\n  visibleGoods.sort((a, b) => {\n    if (sortType === SortType.ALPHABET) {\n      return a.localeCompare(b);\n    }\n\n    if (sortType === SortType.LENGTH) {\n      return a.length - b.length;\n    }\n\n    return 0;\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleSort = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  handleReverse = () => {\n    this.setState((prevState) => ({ isReversed: !prevState.isReversed }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const reorderedGoods = getReorderedGoods({ sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn({\n              'button is-info': true,\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn({\n              'button is-success': true,\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn({\n              'button is-warning': true,\n              'is-light': isReversed !== true,\n            })}\n            onClick={() => this.handleReverse()}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => this.handleReset()}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          {reorderedGoods.map(item => {\n            return (\n              <li data-cy=\"Good\">{item}</li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}